## no critic Warnings
# $Id: /src/Exception-NoException/trunk/lib/Exception/NoException/_obj.pm 166 2006-08-16T21:22:18.048528Z josh  $

package Exception::NoException::_obj;
use strict;
use vars '$VERSION';    ## no critic Interpolation
$VERSION = '0.01';

# Provide ->get_no_exception
use Exception::NoException;

# Pretend to be an empty scalar.
use UNIVERSAL::ref;
sub ref {''}

#use UNIVERSAL::ref;
#sub ref {''}

#use Data::Dumper;
#print Dumper( \%h );

use overload
    'fallback' => undef,
    '=' => sub { '' },

    '+' => sub { $_[2] ? ($_[1] + 0) : (0 + $_[0]) },
    '-' => sub { $_[2] ? ($_[1] - 0) : (0 - $_[0]) },
    '*' => sub { $_[2] ? ($_[1] * 0) : (0 * $_[0]) },
    '/' => sub { $_[2] ? ($_[1] / 0) : (0 / $_[0]) },
    '%' => sub { $_[2] ? ($_[1] % 0) : (0 % $_[0]) },
    '**' => sub { $_[2] ? ($_[1] ** 0) : (0 ** $_[0]) },
    '<<' => sub { $_[2] ? ($_[1] << 0) : (0 << $_[0]) },
    '>>' => sub { $_[2] ? ($_[1] >> 0) : (0 >> $_[0]) },
    'x' => sub { $_[2] ? ($_[1] x 0) : (0 x $_[0]) },
    '.' => sub { $_[2] ? ($_[1] . 0) : (0 . $_[0]) },
    '<=>' => sub { $_[2] ? ($_[1] <=> 0) : (0 <=> $_[0]) },
    'cmp' => sub { $_[2] ? ($_[1] cmp 0) : (0 cmp $_[0]) },
    '&' => sub { $_[2] ? ($_[1] & 0) : (0 & $_[0]) },
    '^' => sub { $_[2] ? ($_[1] ^ 0) : (0 ^ $_[0]) },
    '|' => sub { $_[2] ? ($_[1] | 0) : (0 | $_[0]) },
    '~' => sub { ~ '' },
    'atan2' => sub { $_[2] ? atan2( $_[1], $_[0] ) : atan2( $_[0], $_[1] ) },
    'cos'   => sub { 1 },
    'sin'   => sub { 0 },
    'exp'   => sub { 1 },
    'abs'   => sub { 0 },
    'sqrt'  => sub { 0 },
    'int'   => sub { 0 },

    # Autogenerated:
    # += -= *= /= %= **= <<= >>= x= .=
    # < <= > >= == != lt le gt ge eq ne
    # &= ^= |= neg !
    # ++ --
    # <>

    # Conversion
    '""'   => sub { '' },
    'bool' => sub { !1 },
    '0+'   => sub { 0 },
    'qr'   => sub { qr// },

    # Matching
    (
        $] >= 5.010
        ? ( '~~' => sub { '' } )
        : ()
    ),

    # Dereferencing
    '${}' => sub { '' },
    '@{}' => sub { '' },
    '%{}' => sub { '' },
    '&{}' => sub { '' },
    '*{}' => sub { '' },
;

sub AUTOLOAD {}

## no critic EndWithOne
# Quote blatantly copied form Michael Poe's errantstory.com
q[ Hey, what does this switch labeled 'Pulsating Ejector' do?

   I don't know... I've always been too afraid to find out ];

__END__

=head1 NAME

Exception::NoException::_obj - Implementation for Exception::NoException object

=head1 DESCRIPTION

This object overloads all operations with C<<
Exception::NoException->get_no_exception >>. It also AUTOLOADs all
methods with the same.

=head1 METHODS

=over

=item C<< $obj->ref >>

Returns an empty string.

=item C<< $obj->_no_exception >>

This is the default "false"/"no exception" function.

=item C<< $obj->AUTOLOAD >>

This object autoloads everything as calls to C<< ->no_exception >>.

=back

=head1 SEE ALSO

L<Exception::NoException>
